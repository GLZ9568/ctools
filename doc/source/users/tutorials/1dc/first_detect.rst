.. _1dc_select_models:

Detecting candidate sources
---------------------------

As next step you need to identify the location of candidate sources in the
sky map.
You do this using the :ref:`cssrcdetect` script:

.. code-block:: bash

   $ cssrcdetect
   Input sky map file [skymap.fits]
   Source model type (POINT) [POINT]
   Background model type (NONE|IRF|AEFF|CUBE) [NONE] IRF
   Detection threshold (Gaussian sigma) [5.0] 10.0
   Output model definition XML file [models.xml]
   Output DS9 region file [ds9.reg]

This generates a
:ref:`model definition XML file <glossary_moddef>`
that contains point source model components for all sources that were detected
in the sky map.
All model components have a power law as spectral component with
parameters that correspond to 1% of the very-high-energy spectrum of the
Crab, which is a reasonable starting condition for a subsequent model
fitting using the :ref:`ctlike` tool.
To detect the sources, :ref:`cssrcdetect` employs a peak finding algorithm that
iteratively finds all peaks in the sky map above a given threshold.
The detection threshold was set here to ``10.0`` which means that only peaks
are considered that are ten standard deviations above the mean value of the
sky map pixels.
The script generated also a `ds9 <http://ds9.si.edu>`_ region file that can
be overlaid on the sky map.
Due to the relatively high threshold of ten standard deviations, only two
sources were detected.

.. figure:: first_skymap_sources.png
   :width: 600px
   :align: center

   *Background subtracted sky map of the events recorded during the Galactic Plane Survey around the Galactic Centre with the detected sources overlaid*

Below is the content of the
:ref:`model definition XML file <glossary_moddef>`
that was generated by :ref:`cssrcdetect`.
In addition to the two point sources the file also contains a background model
component of type ``CTAIrfBackground``.
This component was added since the background model type was set to ``IRF``
in the :ref:`cssrcdetect` run.
Having a background model component added allows to directly use the
:ref:`model definition XML file <glossary_moddef>`
for a model fitting with :ref:`ctlike`.

.. code-block:: xml

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <source_library title="source library">
     <source name="Src001" type="PointSource">
       <spectrum type="PowerLaw">
         <parameter name="Prefactor" value="1" error="0" scale="5.7e-18" min="0" free="1" />
         <parameter name="Index" value="1" error="-0" scale="-2.48" min="-4.03225806451613" max="4.03225806451613" free="1" />
         <parameter name="PivotEnergy" value="1" scale="300000" free="0" />
       </spectrum>
       <spatialModel type="PointSource">
         <parameter name="RA" value="266.424004498437" error="0" scale="1" free="1" />
         <parameter name="DEC" value="-29.0049010253548" error="0" scale="1" free="1" />
       </spatialModel>
     </source>
     <source name="Src002" type="PointSource">
       <spectrum type="PowerLaw">
         <parameter name="Prefactor" value="1" error="0" scale="5.7e-18" min="0" free="1" />
         <parameter name="Index" value="1" error="-0" scale="-2.48" min="-4.03225806451613" max="4.03225806451613" free="1" />
         <parameter name="PivotEnergy" value="1" scale="300000" free="0" />
       </spectrum>
       <spatialModel type="PointSource">
         <parameter name="RA" value="266.843692146479" error="0" scale="1" free="1" />
         <parameter name="DEC" value="-28.1289200709305" error="0" scale="1" free="1" />
       </spatialModel>
     </source>
     <source name="Background" type="CTAIrfBackground">
       <spectrum type="PowerLaw">
         <parameter name="Prefactor" value="1" error="0" scale="1" min="0" free="1" />
         <parameter name="Index" value="0" error="0" scale="1" min="-10" max="10" free="1" />
         <parameter name="PivotEnergy" value="1" scale="1000000" free="0" />
       </spectrum>
     </source>
   </source_library>

